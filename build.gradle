apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'findbugs'
apply plugin: 'pmd'
apply plugin: 'checkstyle'
apply plugin: 'jacoco'

repositories {
	mavenCentral()
}

dependencies {
	compile 'junit:junit:4.12'
}

findbugs {
	ignoreFailures = true
	//toolVersion = "2.0.1"
	//sourceSets = [sourceSets.main]
	reportsDir = file("$project.buildDir/reports/findbugs")
	effort = "max"
	showProgress = true
    reportLevel = "high"
}

pmd {
	toolVersion = '5.2.2'
	ignoreFailures = true
	sourceSets = [sourceSets.main]
	reportsDir = file("$project.buildDir/reports/pmd")
	ruleSets = [
        'java-android',
        'java-basic',
        'java-braces',
        'java-clone',
        'java-codesize',
        'java-comments',
        'java-controversial',
        'java-coupling',
        'java-design',
        'java-empty',
        'java-finalizers',
        'java-imports',
        'java-j2ee',
        'java-javabeans',
        'java-junit',
        'java-logging-jakarta-commons',
        'java-logging-java',
        'java-migrating',
        'java-naming',
        'java-optimizations',
        'java-strictexception',
        'java-strings',
        'java-sunsecure',
        'java-typeresolution',
        'java-unnecessary',
        'java-unusedcode'           
        ]
}

checkstyle {
    toolVersion = '7.2'
    ignoreFailures = true
}

// CPD Hack
task cpdMain(dependsOn: 'pmdMain') {
  ext.ignoreFailures = true

  doLast {
    File outDir = new File(reporting.baseDir, 'cpd/')
    // Make sure the output dir exists to prevent a ReportException
    outDir.mkdirs()

    ant.taskdef(name: 'cpd', classname: 'net.sourceforge.pmd.cpd.CPDTask',
            classpath: configurations.pmd.asPath)

    ant.cpd(
        minimumTokenCount: '100',
        format: 'xml',
        outputFile: new File(outDir , 'main.xml')) {
        fileset(dir: projectDir.getPath()) {
              sourceSets.main.java.each { sourceDir ->
                include(name: project.relativePath(sourceDir.getPath()))
            }
          }
    }
  }
}
check.dependsOn cpdMain
